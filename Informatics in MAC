#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<long long> vi;
typedef vector<ll> vl;
typedef pair<long long,long long> pii;

#define endl '\n'
#define PB push_back
#define eb emplace_back
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()

#define MOD 1000000007

#define mem(a,b) memset(a, b, sizeof(a) )
#define sqr(a) ((a) * (a))

#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);

ll gcd ( ll a, ll b ){    return __gcd ( a, b );}
ll lcm ( ll a, ll b ){    return a * ( b / gcd ( a, b ) );}

int arr[100005];
void solve(int cs)
{
    memset(arr, 0, sizeof(arr));
    int n;
    cin >> n;

    vi v(n), v1;
    map<int,int> mp;

    for( auto &u : v)
    {
        cin >> u;
        mp[u]++;
    }

    v1 = v;
    sort(all(v1));

    int mex = 0;

    for( int i = 0; i < n; i++ )
    {
        if( v1[i] == mex )mex++;
    }

    //cout << mex << endl;
    bool f = true;

    for( auto u : mp )
    {
        if( u.F < mex && u.S < 2 )
        {
            f = false;
            break;
        }
    }

    if( !f )
    {
        cout << -1 << endl;
        return;
    }
    int j = 0, i, k = 0;

    for( i = 0; i < n; i++ )
    {
        if( v[i] < mex && arr[v[i]] == 0 )
        {
            arr[v[i]]++;
            j++;
        }

        if( j == mex )break;
    }
    //cout << j << endl;
    if( j < mex )
    {
        cout << -1 << endl;
        return;
    }
    k = i;
    j = 0;
    memset(arr, 0, sizeof(arr));

    for( ; i < n; i++ )
    {
        if( v[i] < mex && arr[v[i]] == 0 )
        {
            arr[v[i]]++;
            j++;
        }
    }
    //cout << j << endl;

    if( j == mex )
    {
        cout << 2 << endl;
        cout << 1 << " " << k + 1 << endl << k + 2 << " " << n << endl; 
    }
    else
        cout << -1 << endl;
}
int main()
{
    optimize();

    int t = 1,cs = 0;
    cin >> t;

    while(t--)
    {
        solve(++cs);
    }
    return 0;
}
