///   ***   ---   |||         In the name of VOGOBAN        |||   ---   ***   ///

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef pair<int,int> pii;

#define endl '\n'
#define PB push_back
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()

#define MOD 1000000007

#define mem(a,b) memset(a, b, sizeof(a) )
#define sqr(a) ((a) * (a))

#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);


ll gcd ( ll a, ll b ){     return __gcd ( a, b );}
ll lcm ( ll a, ll b ){    return a * ( b / gcd ( a, b ) );}

const int N = 1e5 + 123;
vector< int > graph[N];
int cat[N];
int cnt;
int n, m;

void DFS( int vertex ,int par, int pussy )
{
    bool found = cat[vertex];
    if ( found && pussy + 1 > m )return;
    if ( graph[vertex].size() == 1 && vertex != 1 )cnt++;
    //cout << vertex << " " << par << endl;
    for ( auto child : graph[vertex] )
    {
        //cout << "vertex " << vertex << " Child " << child << endl;
        if ( child == par )continue;
        if ( found )DFS(child, vertex, pussy + 1);
        else
        DFS( child, vertex, 0 );
        //cout << cnt << endl;
    }
}

int main()
{
    optimize();

        cin >> n >> m;

        for ( int i = 1; i <= n; i++ )
        {
            cin >> cat[i];
        }
        
        for ( int i = 0; i < n-1; i++ )
        {
            int v1, v2;
            cin >> v1 >> v2;

            graph[v1].PB(v2);
            graph[v2].PB(v1);
        }

        DFS(1, 0, 0);
        cout << cnt << endl;

    return 0;
}
