///   ***   ---   ||         In the name of VOGOBAN        |||   ---   ***   ///
 
 
 
#include<bits/stdc++.h>
using namespace std;
 
 
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<vi> vvi;
typedef vector<vl> vvl;
typedef pair<int,int> pii;
typedef pair<double, double> pdd;
typedef pair<ll, ll> pll;
typedef vector<pii> vii;
typedef vector<pll> vll;
typedef double dl;
 
#define endl '\n'
#define PB push_back
#define F first
#define S second
#define all(v) (v).begin(),(v).end()
#define rall(v) (v).rbegin(),(v).rend()
#define sz(x) (int)x.size()
 
const double PI = acos(-1);
const double eps = 1e-9;
const int inf = 2000000000;
const ll infLL = 9000000000000000000;
#define MOD 1000000007
 
#define mem(a,b) memset(a, b, sizeof(a) )
#define sqr(a) ((a) * (a))
 
#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define fraction() cout.unsetf(ios::floatfield); cout.precision(10); cout.setf(ios::fixed,ios::floatfield);
#define file() freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
 
#define dbg(args...) do {cerr << #args << " : "; faltu(args); } while(0)
void faltu () {            cerr << endl;}
template < typename T, typename ... hello>void faltu( T arg, const hello &... rest) {cerr << arg << ' ';faltu(rest...);}
 
ll gcd ( ll a, ll b ) { return __gcd ( a, b ); }
ll lcm ( ll a, ll b ) { return a * ( b / gcd ( a, b ) ); }
//const int mx=2e5+123;
//int has[mx],a[mx];
int main()
{
    optimize();
         ll t;
         cin>>t;
         while(t--){
            string s1,s2;
            cin>>s1>>s2;
       int prv=0,res=0,sum=0,j,i,prv1=0;
       for(j=0; j<s1.size();j++)
       {
            if(s2[0]==s1[j])
                {prv=j+1;
             //cout<<prv;
                break;
             }
       }
       for(i=1; i<s2.size();i++)
       {
           for(j=0; j<s1.size();j++)
           {
               if(s2[i]==s1[j]){
                  prv1=j+1;
                  //cout<<prv1<<endl;
               res=abs(prv1-prv);
               //cout<<res<<endl;
               sum+=res;
               //cout<<sum<<endl;
               }
           }
           prv=prv1;
          // cout<<prv<<endl;
       }
       cout<<sum<<endl;
    }
       return 0;
}
