#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef pair<int,int> pii;

#define endl '\n'
#define PB push_back
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()

#define MOD 1000000007

#define mem(a,b) memset(a, b, sizeof(a) )
#define sqr(a) ((a) * (a))

#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);


int main() {

    optimize();

        int t;
        cin >> t;

        while ( t-- )
        {
            int n;
            cin >> n;

            vi v(n), v1;

            for ( auto &u : v)
            {
                cin >> u;
                v1.PB(u);
            }

            int lowidx = 0, hiidx = 0;
            sort(all(v1));
            bool done = false;

            for ( int i = 0; i < n; i++ )
            {
                if ( v1[0] == v[i] )
                {
                    lowidx = i;
                    break;
                }
            }
            for ( int i = n-1; i >= 0; i-- )
            {
                if ( v1[n-1] == v[i] )
                {
                    hiidx = i;
                    break;
                }
            }

            //cout << v[lowidx-1] << endl;

            if ( v1[0] == v[0] || v1[n-1] == v[n-1] )done = true;

            if ( done )
            {
                cout << v1[n-1] - v1[0] << endl;
            }
            else if ( n == 1)
            {
                cout << 0 << endl;
            }
            else
            {
                int ans = -1e7;
                ans = max(ans,v[n-1] - v[0]);

                for ( int i = 0; i < n-1; i++ )
                {
                    ans = max(ans, (v[i] - v[i+1]));
                }
                for ( int i = 0; i < n-1; i++ )
                {
                    ans = max(ans, (v[n-1] - v[i]));
                }
                for ( int i = 0; i < n-1; i++ )
                {
                    ans = max(ans, (v[i] - v[0]));
                }

                cout << ans << endl;
            }


        }
    return 0;
}
