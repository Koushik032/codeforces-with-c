///   ***   ---   |||         In the name of VOGOBAN        |||   ---   ***   ///

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef pair<int,int> pii;

#define endl '\n'
#define PB push_back
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()

#define MOD 1000000007

#define mem(a,b) memset(a, b, sizeof(a) )
#define sqr(a) ((a) * (a))

#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);


ll gcd ( ll a, ll b )
{ 
    return __gcd ( a, b );
}
ll lcm ( ll a, ll b )
{
    return a * ( b / gcd ( a, b ) );
}
const int mx =1e5+123;
// int arr[mx], arr1[mx];
//bitset <mx> isprime;
//vector <int> primes;
int arr[mx];

int main()
{
    optimize();
        
        ll t;
        cin >> t;

        while ( t-- )
        {
            int n;
            cin >> n;

            string s, s1 = "0";
            cin >> s;
            s1 += s;

            //cout << s1 << endl;
            vi v(n+1);

            for ( int i = 1; i <= n; i++ )
            {
                cin >> v[i];
            }

            int cnt = 0;

            // for ( auto u : v)
            // {
            //     if ( u == 1 )cnt++;
            // }
            ll sum = 0;

            // for ( int i = 0; i <= n; i++ )
            // {
            //     cout << s1[i] << " " << v[i] << endl;
            // }

            vector<pair<char,int>>vp;

            for ( int i = 0; i<= n; i++ )
            {
                vp.PB({s1[i],v[i]});
            }
            //ll sum = 0;
            //for ( auto u : vp)cout << u.F << " " << u.S << endl;


                for ( int i = 1; i <= n; i++ )
                {
                    if ( vp[i].F == '1' )
                    {
                        if ( vp[i-1].S > vp[i].S && vp[i-1].F == '0' )
                        {
                            sum += vp[i-1].S;
                            //cout << vp[i-1].S << endl;
                            vp[i].F = '0';

                            //cout << vp[i].F << endl;
                        }
                        else
                        {
                            sum += vp[i].S;
                            //cout << vp[i].S << endl;

                            vp[i].F = vp[i-1].F;
                            vp[i].S = vp[i-1].S;
                        }
                    }
                }

                cout << sum << endl;
        }
    return 0;
}
