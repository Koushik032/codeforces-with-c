///   ***   ---   |||         In the name of VOGOBAN        |||   ---   ***   ///

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef pair<int,int> pii;

#define endl '\n'
#define PB push_back
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()

#define MOD 1000000007

#define mem(a,b) memset(a, b, sizeof(a) )
#define sqr(a) ((a) * (a))

#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);


ll gcd ( ll a, ll b ){     return __gcd ( a, b );}
ll lcm ( ll a, ll b ){    return a * ( b / gcd ( a, b ) );}

int main()
{
    optimize();
        
        int t;
        cin >> t;

        while ( t-- )
        {
            int n;
            cin >> n;

            vi v(n), v1(n);
            int pos = INT_MAX, pos1 = 0;

            for ( auto &u: v)cin >> u;
            for ( auto &u : v1)cin >> u;

                for ( int i = 0; i < n; i++ )
                {
                    
                    if ( v[i] != v1[i] )
                    {
                        pos = i;
                        break;
                    }
                }

                for ( int i = pos; i > 0; i-- )
                {
                    if ( v1[i] >= v1[i-1] )
                    {
                        pos = i-1;
                    }
                    else
                    {
                        break;
                    }
                }

                for ( int i = n-1; i >= 0; i-- )
                {
                    if ( v[i] != v1[i] )
                    {
                        pos1 = i;
                        break;
                    }
                }
                //cout << v1[pos1] << endl;
                for ( int i = pos1; i < n - 1; i++ )
                {
                    if ( v1[i] <= v1[i+1] )
                    {
                        pos1 = i + 1;
                    }
                    else
                    {
                        break;
                    }
                }

                cout << pos+1 << " " << pos1+1 << endl;

        }
    return 0;
}
